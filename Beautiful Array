// Problem: https://leetcode.com/problems/beautiful-array/

// Solution:

class Solution {
    public int[] beautifulArray(int N) {
        List<Integer> pass = new ArrayList<>();
        for(int i=1; i<N+1; i++) pass.add(i);
        
        List<Integer> ans = dfs(pass);
        
        return ans.stream().mapToInt(i -> i).toArray();
    }
    
    private List<Integer> dfs(List<Integer> arr){
        if(arr.size() < 3) return arr;
        
        List<Integer> odd = new ArrayList<>();
        List<Integer> even = new ArrayList<>();
        
        for(int i=0; i<arr.size(); i++){
            if(i%2 == 0) even.add(arr.get(i));
            else odd.add(arr.get(i));
        }
        
        odd = dfs(odd);
        even = dfs(even);
        List<Integer> tmp = new ArrayList<>();
        tmp.addAll(odd);
        tmp.addAll(even);
        
        return tmp;
    }
}
