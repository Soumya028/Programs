// Problem: https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/

// Solution 

class Solution {
    public int minReorder(int n, int[][] connections) {
         int m = n;
        boolean[] connect = new boolean[n];
        int res = 0;
        for(int[] x: connections){
            if(x[0] == 0){
                swap(x);
                res++;
            }
            if(x[1] == 0){
                connect[x[0]] = true;
                m--;
            }
        }
        int i = 0;
        while(m>1){
            int v1 = connections[i][1];
            int v2 = connections[i][0];
            if(v1 == 0){
                i = (i+1)%(n-1);
                continue;
            }
            if(connect[v1]){
                if(!connect[v2]){
                    connect[v2] = true;
                    m--;
                }
                i = (i+1)%(n-1);
                continue;
            }
            
            if(connect[v2]){
                res++;
                connect[v1] = true;
                m--;
                
            }
            i = (i+1)%(n-1);
        }
        return res;
    }
    
    public void swap(int[] x){
        int temp = x[0];
        x[0] = x[1];
        x[1] = temp;
    }
}
